ref *1> Server {
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  _nsps: Map(1) {
    '/' => Namespace {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      sockets: [Map],
      _fns: [],
      _ids: 0,
      server: [Circular *1],
      name: '/',
      adapter: [Adapter],
      [Symbol(kCapture)]: false
    }
  },
  parentNsps: Map(0) {},
  _path: '/socket.io',
  clientPathRegex: /^\/socket\.io\/socket\.io(\.min|\.msgpack\.min)?\.js(\.map)?(?:\?|$)/,
  _connectTimeout: 45000,
  _serveClient: true,
  _parser: {
    protocol: 5,
    PacketType: {
      '0': 'CONNECT',
      '1': 'DISCONNECT',
      '2': 'EVENT',
      '3': 'ACK',
      '4': 'CONNECT_ERROR',
      '5': 'BINARY_EVENT',
      '6': 'BINARY_ACK',
      CONNECT: 0,
      DISCONNECT: 1,
      EVENT: 2,
      ACK: 3,
      CONNECT_ERROR: 4,
      BINARY_EVENT: 5,
      BINARY_ACK: 6
    },
    Encoder: [class Encoder],
    Decoder: [class Decoder extends Emitter]
  },
  encoder: Encoder {},
  _adapter: [class Adapter extends EventEmitter],
  sockets: <ref *2> Namespace {
    _events: [Object: null prototype] { connection: [Array] },
    _eventsCount: 1,
    _maxListeners: undefined,
    sockets: Map(3) {
      'UCR3KLF_y2drO64TAAAD' => [Socket],
      'OqMZVLVC7nxNnuj6AAAF' => [Socket],
      'jwsuRzVFYP9Q9z8iAAAH' => [Socket]
    },
    _fns: [],
    _ids: 0,
    server: [Circular *1],
    name: '/',
    adapter: Adapter {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      nsp: [Circular *2],
      rooms: [Map],
      sids: [Map],
      encoder: Encoder {},
      [Symbol(kCapture)]: false
    },
    [Symbol(kCapture)]: false
  },
  opts: { cors: true },
  eio: Server {
    _events: [Object: null prototype] {
      connection: [Function: bound onconnection]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    clients: {
      'dSjU-N_6kHkJQk57AAAC': [Socket],
      nvAUkfLiAwrmH6KbAAAE: [Socket],
      ZjDN2DVxzkUmHmvdAAAG: [Socket]
    },
    clientsCount: 3,
    opts: {
      wsEngine: [class WebSocketServer extends EventEmitter],
      pingTimeout: 20000,
      pingInterval: 25000,
      upgradeTimeout: 10000,
      maxHttpBufferSize: 1000000,
      transports: [Array],
      allowUpgrades: true,
      httpCompression: [Object],
      cors: true,
      allowEIO3: false,
      path: '/socket.io'
    },
    corsMiddleware: [Function: corsMiddleware],
    ws: WebSocketServer {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      options: [Object],
      [Symbol(kCapture)]: false
    },
    [Symbol(kCapture)]: false
  },
  httpServer: <ref *3> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      connection: [Function: connectionListener],
      close: [Function: bound close],
      listening: [Function: bound init],
      upgrade: [Function (anonymous)],
      request: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 4,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner_symbol)]: [Circular *3]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    requestTimeout: 0,
    _connectionKey: '4:0.0.0.0:3000',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(async_id_symbol)]: 49
  },
  engine: Server {
    _events: [Object: null prototype] {
      connection: [Function: bound onconnection]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    clients: {
      'dSjU-N_6kHkJQk57AAAC': [Socket],
      nvAUkfLiAwrmH6KbAAAE: [Socket],
      ZjDN2DVxzkUmHmvdAAAG: [Socket]
    },
    clientsCount: 3,
    opts: {
      wsEngine: [class WebSocketServer extends EventEmitter],
      pingTimeout: 20000,
      pingInterval: 25000,
      upgradeTimeout: 10000,
      maxHttpBufferSize: 1000000,
      transports: [Array],
      allowUpgrades: true,
      httpCompression: [Object],
      cors: true,
      allowEIO3: false,
      path: '/socket.io'
    },
    corsMiddleware: [Function: corsMiddleware],
    ws: WebSocketServer {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      options: [Object],
      [Symbol(kCapture)]: false
    },
    [Symbol(kCapture)]: false
  },
  [Symbol(kCapture)]: false
}